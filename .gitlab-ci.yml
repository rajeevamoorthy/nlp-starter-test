image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
    - test
    - run

before_script:
    - echo "before script"
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt

test:
    stage: test
    script:
        - echo "testing"
        - python -m coverage run -m unittest discover -s tests -t nlp_assignment
        - coverage report
        # - flake8

run:
    stage: run
    script:
        - python nlp_assignment/training_script.py

# # Official language image. Look for the different tagged releases at:
# # https://hub.docker.com/r/library/python/tags/
# image: python:latest


# # Change pip's cache directory to be inside the project directory since we can
# # only cache local items.
# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# # Pip's cache doesn't store the python packages
# # https://pip.pypa.io/en/stable/reference/pip_install/#caching
# #
# # If you want to also cache the installed packages, you have to install
# # them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - venv/

# before_script:
#   - python -V  # Print out python version for debugging
#   - pip install virtualenv
#   - virtualenv venv
#   - source venv/bin/activate

# test:
#   script:
#     - coverage report > coverage.report
#     - flake8 -q > flake8.stat
#     - python -m coverage run -m unittest discover -s tests -t nlp_assignment

# run:
#   script:
#     - python nlp_assignment/training_script.py
